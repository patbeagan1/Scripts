#!/bin/bash

echo "
This script logs the ip addresses which allow sslv3 connections.

Press "space" to exit, program will shut down current connection and reenable blocking. *don't ctrl-c*
Results are in $results. They will also be displayed at the end of the output.
"
read -p "Press enter to start."
results=results6.txt

############################
#turning off input blocking mode
if [ -t 0 ]; then stty -echo -icanon -icrnl time 0 min 0; fi
############################

input="x"

for ip in 128.119.{240..241}.{0..1}; do
	echo $ip
	if ping -q -n -c2 -W500 $ip > /dev/null; then 
		echo -e $ip "up" >> $results
		echo "$ip test :21" >> $results; ( openssl s_client -connect $ip:21  -ssl3 < /dev/null >> $results ) & sleep 0.5 ; kill $! 
		echo "$ip test :25" >> $results; ( openssl s_client -connect $ip:25  -ssl3 < /dev/null >> $results ) & sleep 0.5 ; kill $! 
		echo "$ip test :110" >> $results; ( openssl s_client -connect $ip:110 -ssl3 < /dev/null >> $results ) & sleep 0.5 ; kill $! 
		echo "$ip test :143" >> $results; ( openssl s_client -connect $ip:143 -ssl3 < /dev/null >> $results ) & sleep 0.5 ; kill $! 
		echo "$ip test :443" >> $results; ( openssl s_client -connect $ip:443 -ssl3 < /dev/null >> $results ) & sleep 0.5 ; kill $! 
		echo "$ip test :465" >> $results; ( openssl s_client -connect $ip:465 -ssl3 < /dev/null >> $results ) & sleep 0.5 ; kill $! 
		echo "$ip test :636" >> $results; ( openssl s_client -connect $ip:636 -ssl3 < /dev/null >> $results ) & sleep 0.5 ; kill $! 
		echo "$ip test :990" >> $results; ( openssl s_client -connect $ip:990 -ssl3 < /dev/null >> $results ) & sleep 0.5 ; kill $! 
		echo "$ip test :993" >> $results; ( openssl s_client -connect $ip:993 -ssl3 < /dev/null >> $results ) & sleep 0.5 ; kill $! 
		echo "$ip test :995" >> $results; ( openssl s_client -connect $ip:995 -ssl3 < /dev/null >> $results ) & sleep 0.5 ; kill $! 
		echo "$ip test :10000" >> $results; ( openssl s_client -connect $ip:10000 -ssl3 < /dev/null >> $results ) & sleep 0.5 ; kill $!
	fi 
	input="`cat -v`"
	if [ "x$input" != "x" ]; then 
		break; 
	fi
done

############################
#turning input blocking mode back on
if [ -t 0 ]; then stty sane; fi
############################

echo
echo
getvuln="grep -B 3 -A 1 -F Certificate\ chain $results | sed s/-//g | sed s/Certificate\ chain//g | sed s/.*CN=//g | sed s/CONNECTED\(00000003\)//g | sed s/up//g | sed /^$/d | sed -e 'N;s/\n/  ?/g' | tr '?' '\t' | sort -t . -k 1,1n -k 2,2n -k 3,3n -k 4,4n | uniq | sed '/wlcpublic.publicnet.localdomain/d' | sed s/test\ //g"

echo "Insecure IP addresses:"
eval $getvuln

echo "Total number of insecure addresses:"
eval $getvuln | wc -l

echo "
Machines with bad protocols can also be found manually with the command: 
$getvuln
"

exit 0
